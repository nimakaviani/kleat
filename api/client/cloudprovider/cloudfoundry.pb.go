// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.3
// source: cloudprovider/cloudfoundry.proto

package cloudprovider

import (
	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	client "github.com/spinnaker/kleat/api/client"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Configuration for the Cloud Foundry provider.
type CloudFoundry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Whether the provider is enabled.
	Enabled *wrappers.BoolValue `protobuf:"bytes,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// The list of configured accounts.
	Accounts []*CloudFoundryAccount `protobuf:"bytes,2,rep,name=accounts,proto3" json:"accounts,omitempty"`
	// The name of the primary account.
	PrimaryAccount string `protobuf:"bytes,3,opt,name=primaryAccount,proto3" json:"primaryAccount,omitempty"`
}

func (x *CloudFoundry) Reset() {
	*x = CloudFoundry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudprovider_cloudfoundry_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloudFoundry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudFoundry) ProtoMessage() {}

func (x *CloudFoundry) ProtoReflect() protoreflect.Message {
	mi := &file_cloudprovider_cloudfoundry_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudFoundry.ProtoReflect.Descriptor instead.
func (*CloudFoundry) Descriptor() ([]byte, []int) {
	return file_cloudprovider_cloudfoundry_proto_rawDescGZIP(), []int{0}
}

func (x *CloudFoundry) GetEnabled() *wrappers.BoolValue {
	if x != nil {
		return x.Enabled
	}
	return nil
}

func (x *CloudFoundry) GetAccounts() []*CloudFoundryAccount {
	if x != nil {
		return x.Accounts
	}
	return nil
}

func (x *CloudFoundry) GetPrimaryAccount() string {
	if x != nil {
		return x.PrimaryAccount
	}
	return ""
}

// Configuration for a Spinnaker Cloud Foundry account.
type CloudFoundryAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the account.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// (Required) Host of the Cloud Foundry Foundation API endpoint
	// (e.g., `api.sys.somesystem.com`).
	Api string `protobuf:"bytes,2,opt,name=api,proto3" json:"api,omitempty"`
	// HTTP(S) URL of the Apps Manager application for the Cloud Foundry
	// Foundation (e.g., `https://apps.sys.somesystem.com`).
	AppsManagerUri string `protobuf:"bytes,3,opt,name=appsManagerUri,proto3" json:"appsManagerUri,omitempty"`
	// The environment name for the account. Many accounts can share the
	// same environment (e.g., dev, test, prod).
	Environment string `protobuf:"bytes,4,opt,name=environment,proto3" json:"environment,omitempty"`
	// HTTP(S) URL of the metrics application for the Cloud Foundry Foundation
	// (e.g., `https://metrics.sys.somesystem.com`).
	MetricsUri string `protobuf:"bytes,5,opt,name=metricsUri,proto3" json:"metricsUri,omitempty"`
	// (Required) Password for the account to use for this Cloud Foundry
	// Foundation.
	Password string `protobuf:"bytes,6,opt,name=password,proto3" json:"password,omitempty"`
	// (Default: `false`) Skip SSL server certificate validation of the API
	// endpoint.
	SkipSslValidation *wrappers.BoolValue `protobuf:"bytes,7,opt,name=skipSslValidation,proto3" json:"skipSslValidation,omitempty"`
	// (Required) User name for the account to use for this Cloud Foundry
	// Foundation.
	User string `protobuf:"bytes,8,opt,name=user,proto3" json:"user,omitempty"`
	// Fiat permissions configuration.
	Permissions *client.Permissions `protobuf:"bytes,9,opt,name=permissions,proto3" json:"permissions,omitempty"`
	// (Deprecated): List of required Fiat permission groups. Configure
	// `permissions` instead.
	RequiredGroupMembership []string `protobuf:"bytes,10,rep,name=requiredGroupMembership,proto3" json:"requiredGroupMembership,omitempty"`
}

func (x *CloudFoundryAccount) Reset() {
	*x = CloudFoundryAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudprovider_cloudfoundry_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloudFoundryAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudFoundryAccount) ProtoMessage() {}

func (x *CloudFoundryAccount) ProtoReflect() protoreflect.Message {
	mi := &file_cloudprovider_cloudfoundry_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudFoundryAccount.ProtoReflect.Descriptor instead.
func (*CloudFoundryAccount) Descriptor() ([]byte, []int) {
	return file_cloudprovider_cloudfoundry_proto_rawDescGZIP(), []int{1}
}

func (x *CloudFoundryAccount) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CloudFoundryAccount) GetApi() string {
	if x != nil {
		return x.Api
	}
	return ""
}

func (x *CloudFoundryAccount) GetAppsManagerUri() string {
	if x != nil {
		return x.AppsManagerUri
	}
	return ""
}

func (x *CloudFoundryAccount) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

func (x *CloudFoundryAccount) GetMetricsUri() string {
	if x != nil {
		return x.MetricsUri
	}
	return ""
}

func (x *CloudFoundryAccount) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CloudFoundryAccount) GetSkipSslValidation() *wrappers.BoolValue {
	if x != nil {
		return x.SkipSslValidation
	}
	return nil
}

func (x *CloudFoundryAccount) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *CloudFoundryAccount) GetPermissions() *client.Permissions {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *CloudFoundryAccount) GetRequiredGroupMembership() []string {
	if x != nil {
		return x.RequiredGroupMembership
	}
	return nil
}

var File_cloudprovider_cloudfoundry_proto protoreflect.FileDescriptor

var file_cloudprovider_cloudfoundry_proto_rawDesc = []byte{
	0x0a, 0x20, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2f,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb2, 0x01, 0x0a, 0x0c, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x72, 0x79, 0x12, 0x34, 0x0a, 0x07, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42,
	0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x12, 0x44, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x46,
	0x6f, 0x75, 0x6e, 0x64, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x08, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x72, 0x69, 0x6d, 0x61,
	0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x8f, 0x03, 0x0a, 0x13, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x72, 0x79,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61,
	0x70, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x69, 0x12, 0x26, 0x0a,
	0x0e, 0x61, 0x70, 0x70, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x55, 0x72, 0x69, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x70, 0x70, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x55, 0x72, 0x69, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x55, 0x72, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x55, 0x72, 0x69, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x12, 0x48, 0x0a, 0x11, 0x73, 0x6b, 0x69, 0x70, 0x53, 0x73, 0x6c, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x11, 0x73, 0x6b, 0x69, 0x70,
	0x53, 0x73, 0x6c, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x12, 0x34, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x38, 0x0a, 0x17, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68,
	0x69, 0x70, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x17, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69,
	0x70, 0x42, 0x35, 0x5a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x73, 0x70, 0x69, 0x6e, 0x6e, 0x61, 0x6b, 0x65, 0x72, 0x2f, 0x6b, 0x6c, 0x65, 0x61, 0x74, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cloudprovider_cloudfoundry_proto_rawDescOnce sync.Once
	file_cloudprovider_cloudfoundry_proto_rawDescData = file_cloudprovider_cloudfoundry_proto_rawDesc
)

func file_cloudprovider_cloudfoundry_proto_rawDescGZIP() []byte {
	file_cloudprovider_cloudfoundry_proto_rawDescOnce.Do(func() {
		file_cloudprovider_cloudfoundry_proto_rawDescData = protoimpl.X.CompressGZIP(file_cloudprovider_cloudfoundry_proto_rawDescData)
	})
	return file_cloudprovider_cloudfoundry_proto_rawDescData
}

var file_cloudprovider_cloudfoundry_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_cloudprovider_cloudfoundry_proto_goTypes = []interface{}{
	(*CloudFoundry)(nil),        // 0: proto.cloudprovider.CloudFoundry
	(*CloudFoundryAccount)(nil), // 1: proto.cloudprovider.CloudFoundryAccount
	(*wrappers.BoolValue)(nil),  // 2: google.protobuf.BoolValue
	(*client.Permissions)(nil),  // 3: proto.Permissions
}
var file_cloudprovider_cloudfoundry_proto_depIdxs = []int32{
	2, // 0: proto.cloudprovider.CloudFoundry.enabled:type_name -> google.protobuf.BoolValue
	1, // 1: proto.cloudprovider.CloudFoundry.accounts:type_name -> proto.cloudprovider.CloudFoundryAccount
	2, // 2: proto.cloudprovider.CloudFoundryAccount.skipSslValidation:type_name -> google.protobuf.BoolValue
	3, // 3: proto.cloudprovider.CloudFoundryAccount.permissions:type_name -> proto.Permissions
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_cloudprovider_cloudfoundry_proto_init() }
func file_cloudprovider_cloudfoundry_proto_init() {
	if File_cloudprovider_cloudfoundry_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cloudprovider_cloudfoundry_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloudFoundry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudprovider_cloudfoundry_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloudFoundryAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cloudprovider_cloudfoundry_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cloudprovider_cloudfoundry_proto_goTypes,
		DependencyIndexes: file_cloudprovider_cloudfoundry_proto_depIdxs,
		MessageInfos:      file_cloudprovider_cloudfoundry_proto_msgTypes,
	}.Build()
	File_cloudprovider_cloudfoundry_proto = out.File
	file_cloudprovider_cloudfoundry_proto_rawDesc = nil
	file_cloudprovider_cloudfoundry_proto_goTypes = nil
	file_cloudprovider_cloudfoundry_proto_depIdxs = nil
}

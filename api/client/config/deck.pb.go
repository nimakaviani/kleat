// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: config/deck.proto

package config

import (
	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	notification "github.com/spinnaker/kleat/api/client/notification"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Deck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The endpoint at which Deck communicates with Gate.
	GateUrl string `protobuf:"bytes,1,opt,name=gateUrl,proto3" json:"gateUrl,omitempty"`
	// Whether authn is enabled.
	AuthEnabled *wrappers.BoolValue `protobuf:"bytes,2,opt,name=authEnabled,proto3" json:"authEnabled,omitempty"`
	// The Gate authn endpoint.
	AuthEndpoint string `protobuf:"bytes,3,opt,name=authEndpoint,proto3" json:"authEndpoint,omitempty"`
	// Baking details URL used in Bake stage execution details.
	BakeryDetailUrl string `protobuf:"bytes,4,opt,name=bakeryDetailUrl,proto3" json:"bakeryDetailUrl,omitempty"`
	// Configuration for the canary UI.
	Canary *Deck_Canary `protobuf:"bytes,5,opt,name=canary,proto3" json:"canary,omitempty"`
	// Configuration for notifications providers.
	Notifications *Deck_Notifications `protobuf:"bytes,6,opt,name=notifications,proto3" json:"notifications,omitempty"`
	// Configuration for cloud provider defaults.
	Providers *Deck_Providers `protobuf:"bytes,7,opt,name=providers,proto3" json:"providers,omitempty"`
	// Spinnaker version.
	Version string `protobuf:"bytes,8,opt,name=version,proto3" json:"version,omitempty"`
	// Default time zone in which to display timestamps in the UI.
	DefaultTimeZone string `protobuf:"bytes,9,opt,name=defaultTimeZone,proto3" json:"defaultTimeZone,omitempty"`
	// Configuration for UI-related feature flags.
	Feature *Deck_Features `protobuf:"bytes,10,opt,name=feature,proto3" json:"feature,omitempty"`
}

func (x *Deck) Reset() {
	*x = Deck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_deck_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Deck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deck) ProtoMessage() {}

func (x *Deck) ProtoReflect() protoreflect.Message {
	mi := &file_config_deck_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deck.ProtoReflect.Descriptor instead.
func (*Deck) Descriptor() ([]byte, []int) {
	return file_config_deck_proto_rawDescGZIP(), []int{0}
}

func (x *Deck) GetGateUrl() string {
	if x != nil {
		return x.GateUrl
	}
	return ""
}

func (x *Deck) GetAuthEnabled() *wrappers.BoolValue {
	if x != nil {
		return x.AuthEnabled
	}
	return nil
}

func (x *Deck) GetAuthEndpoint() string {
	if x != nil {
		return x.AuthEndpoint
	}
	return ""
}

func (x *Deck) GetBakeryDetailUrl() string {
	if x != nil {
		return x.BakeryDetailUrl
	}
	return ""
}

func (x *Deck) GetCanary() *Deck_Canary {
	if x != nil {
		return x.Canary
	}
	return nil
}

func (x *Deck) GetNotifications() *Deck_Notifications {
	if x != nil {
		return x.Notifications
	}
	return nil
}

func (x *Deck) GetProviders() *Deck_Providers {
	if x != nil {
		return x.Providers
	}
	return nil
}

func (x *Deck) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Deck) GetDefaultTimeZone() string {
	if x != nil {
		return x.DefaultTimeZone
	}
	return ""
}

func (x *Deck) GetFeature() *Deck_Features {
	if x != nil {
		return x.Feature
	}
	return nil
}

// Configuration for UI-related feature flags.
type Deck_Features struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Enable pipeline template support. Read more at
	// https://github.com/spinnaker/dcd-spec.
	PipelineTemplates *wrappers.BoolValue `protobuf:"bytes,1,opt,name=pipelineTemplates,proto3" json:"pipelineTemplates,omitempty"`
	// Enable Chaos Monkey support. For this to work, you'll need a running Chaos
	// Monkey deployment. See https://github.com/Netflix/chaosmonkey/wiki.
	ChaosMonkey *wrappers.BoolValue `protobuf:"bytes,2,opt,name=chaosMonkey,proto3" json:"chaosMonkey,omitempty"`
	// Whether authz is enabled.
	FiatEnabled *wrappers.BoolValue `protobuf:"bytes,3,opt,name=fiatEnabled,proto3" json:"fiatEnabled,omitempty"`
	// Enable managed pipeline templates v2 UI support.
	ManagedPipelineTemplatesV2UI *wrappers.BoolValue `protobuf:"bytes,4,opt,name=managedPipelineTemplatesV2UI,proto3" json:"managedPipelineTemplatesV2UI,omitempty"`
	// Enable managed delivery in the UI
	ManagedDelivery *wrappers.BoolValue `protobuf:"bytes,5,opt,name=managedDelivery,proto3" json:"managedDelivery,omitempty"`
	// Enable managed resources in the UI
	ManagedResources *wrappers.BoolValue `protobuf:"bytes,6,opt,name=managedResources,proto3" json:"managedResources,omitempty"`
}

func (x *Deck_Features) Reset() {
	*x = Deck_Features{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_deck_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Deck_Features) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deck_Features) ProtoMessage() {}

func (x *Deck_Features) ProtoReflect() protoreflect.Message {
	mi := &file_config_deck_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deck_Features.ProtoReflect.Descriptor instead.
func (*Deck_Features) Descriptor() ([]byte, []int) {
	return file_config_deck_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Deck_Features) GetPipelineTemplates() *wrappers.BoolValue {
	if x != nil {
		return x.PipelineTemplates
	}
	return nil
}

func (x *Deck_Features) GetChaosMonkey() *wrappers.BoolValue {
	if x != nil {
		return x.ChaosMonkey
	}
	return nil
}

func (x *Deck_Features) GetFiatEnabled() *wrappers.BoolValue {
	if x != nil {
		return x.FiatEnabled
	}
	return nil
}

func (x *Deck_Features) GetManagedPipelineTemplatesV2UI() *wrappers.BoolValue {
	if x != nil {
		return x.ManagedPipelineTemplatesV2UI
	}
	return nil
}

func (x *Deck_Features) GetManagedDelivery() *wrappers.BoolValue {
	if x != nil {
		return x.ManagedDelivery
	}
	return nil
}

func (x *Deck_Features) GetManagedResources() *wrappers.BoolValue {
	if x != nil {
		return x.ManagedResources
	}
	return nil
}

// Configuration for the canary UI.
type Deck_Canary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The default canary judge. Defaults to `NetflixACAJudge-v1.0`, which is
	// currently the only open-source judge available by default.
	DefaultJudge string `protobuf:"bytes,1,opt,name=defaultJudge,proto3" json:"defaultJudge,omitempty"`
	// Whether the canary UI is disabled.
	FeatureDisabled *wrappers.BoolValue `protobuf:"bytes,2,opt,name=featureDisabled,proto3" json:"featureDisabled,omitempty"`
	// Name of the canary metrics account to use by default.
	MetricsAccountName string `protobuf:"bytes,3,opt,name=metricsAccountName,proto3" json:"metricsAccountName,omitempty"`
	// Name of the metrics store to use by default (e.g., `prometheus`, `datadog`).
	MetricStore string `protobuf:"bytes,4,opt,name=metricStore,proto3" json:"metricStore,omitempty"`
	// Whether or not to show all canary configs in Deck, or just those scoped
	// to the current application.
	ShowAllConfigs *wrappers.BoolValue `protobuf:"bytes,5,opt,name=showAllConfigs,proto3" json:"showAllConfigs,omitempty"`
	// Name of storage account to use by default.
	StorageAccountName string `protobuf:"bytes,6,opt,name=storageAccountName,proto3" json:"storageAccountName,omitempty"`
	// Whether or not to enable custom filter templates for canary configs in
	// Deck.
	TemplatesEnabled *wrappers.BoolValue `protobuf:"bytes,7,opt,name=templatesEnabled,proto3" json:"templatesEnabled,omitempty"`
}

func (x *Deck_Canary) Reset() {
	*x = Deck_Canary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_deck_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Deck_Canary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deck_Canary) ProtoMessage() {}

func (x *Deck_Canary) ProtoReflect() protoreflect.Message {
	mi := &file_config_deck_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deck_Canary.ProtoReflect.Descriptor instead.
func (*Deck_Canary) Descriptor() ([]byte, []int) {
	return file_config_deck_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Deck_Canary) GetDefaultJudge() string {
	if x != nil {
		return x.DefaultJudge
	}
	return ""
}

func (x *Deck_Canary) GetFeatureDisabled() *wrappers.BoolValue {
	if x != nil {
		return x.FeatureDisabled
	}
	return nil
}

func (x *Deck_Canary) GetMetricsAccountName() string {
	if x != nil {
		return x.MetricsAccountName
	}
	return ""
}

func (x *Deck_Canary) GetMetricStore() string {
	if x != nil {
		return x.MetricStore
	}
	return ""
}

func (x *Deck_Canary) GetShowAllConfigs() *wrappers.BoolValue {
	if x != nil {
		return x.ShowAllConfigs
	}
	return nil
}

func (x *Deck_Canary) GetStorageAccountName() string {
	if x != nil {
		return x.StorageAccountName
	}
	return ""
}

func (x *Deck_Canary) GetTemplatesEnabled() *wrappers.BoolValue {
	if x != nil {
		return x.TemplatesEnabled
	}
	return nil
}

// Configuration for notifications providers.
type Deck_Notifications struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Configuration for the BearyChat notification provider.
	Bearychat *notification.BearyChat `protobuf:"bytes,1,opt,name=bearychat,proto3" json:"bearychat,omitempty"`
	// Configuration for the email notification provider.
	Email *notification.Email `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	// Configuration for the GitHub Status notification provider.
	GithubStatus *notification.GithubStatus `protobuf:"bytes,3,opt,name=githubStatus,proto3" json:"githubStatus,omitempty"`
	// Configuration for the Google Chat notification provider.
	GoogleChat *notification.GoogleChat `protobuf:"bytes,4,opt,name=googleChat,proto3" json:"googleChat,omitempty"`
	// Configuration for the Pub/Sub notification provider.
	Pubsub *notification.PubSub `protobuf:"bytes,5,opt,name=pubsub,proto3" json:"pubsub,omitempty"`
	// Configuration for the Slack notification provider.
	Slack *notification.Slack `protobuf:"bytes,6,opt,name=slack,proto3" json:"slack,omitempty"`
	// Configuration for the SMS notification provider.
	Sms *notification.Twilio `protobuf:"bytes,7,opt,name=sms,proto3" json:"sms,omitempty"`
}

func (x *Deck_Notifications) Reset() {
	*x = Deck_Notifications{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_deck_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Deck_Notifications) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deck_Notifications) ProtoMessage() {}

func (x *Deck_Notifications) ProtoReflect() protoreflect.Message {
	mi := &file_config_deck_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deck_Notifications.ProtoReflect.Descriptor instead.
func (*Deck_Notifications) Descriptor() ([]byte, []int) {
	return file_config_deck_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Deck_Notifications) GetBearychat() *notification.BearyChat {
	if x != nil {
		return x.Bearychat
	}
	return nil
}

func (x *Deck_Notifications) GetEmail() *notification.Email {
	if x != nil {
		return x.Email
	}
	return nil
}

func (x *Deck_Notifications) GetGithubStatus() *notification.GithubStatus {
	if x != nil {
		return x.GithubStatus
	}
	return nil
}

func (x *Deck_Notifications) GetGoogleChat() *notification.GoogleChat {
	if x != nil {
		return x.GoogleChat
	}
	return nil
}

func (x *Deck_Notifications) GetPubsub() *notification.PubSub {
	if x != nil {
		return x.Pubsub
	}
	return nil
}

func (x *Deck_Notifications) GetSlack() *notification.Slack {
	if x != nil {
		return x.Slack
	}
	return nil
}

func (x *Deck_Notifications) GetSms() *notification.Twilio {
	if x != nil {
		return x.Sms
	}
	return nil
}

// UI-specific provider default settings.
type Deck_Providers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Appengine provider defaults.
	Appengine *Deck_Providers_Appengine `protobuf:"bytes,1,opt,name=appengine,proto3" json:"appengine,omitempty"`
	// AWS provider defaults.
	Aws *Deck_Providers_Aws `protobuf:"bytes,2,opt,name=aws,proto3" json:"aws,omitempty"`
	// Azure provider defaults.
	Azure *Deck_Providers_Azure `protobuf:"bytes,3,opt,name=azure,proto3" json:"azure,omitempty"`
	// Cloudfoundry provider defaults.
	Cloudfoundry *Deck_Providers_Cloudfoundry `protobuf:"bytes,4,opt,name=cloudfoundry,proto3" json:"cloudfoundry,omitempty"`
	// DC/OS provider defaults.
	Dcos *Deck_Providers_Dcos `protobuf:"bytes,5,opt,name=dcos,proto3" json:"dcos,omitempty"`
	// ECS provider defaults.
	Ecs *Deck_Providers_Ecs `protobuf:"bytes,6,opt,name=ecs,proto3" json:"ecs,omitempty"`
	// GCE provider defaults.
	Gce *Deck_Providers_Gce `protobuf:"bytes,7,opt,name=gce,proto3" json:"gce,omitempty"`
	// Huawei Cloud provider defaults.
	Huaweicloud *Deck_Providers_HuaweiCloud `protobuf:"bytes,8,opt,name=huaweicloud,proto3" json:"huaweicloud,omitempty"`
	// Tencent Cloud provider defaults.
	Tencentcloud *Deck_Providers_TencentCloud `protobuf:"bytes,9,opt,name=tencentcloud,proto3" json:"tencentcloud,omitempty"`
	Kubernetes   *Deck_Providers_Kubernetes   `protobuf:"bytes,10,opt,name=kubernetes,proto3" json:"kubernetes,omitempty"`
}

func (x *Deck_Providers) Reset() {
	*x = Deck_Providers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_deck_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Deck_Providers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deck_Providers) ProtoMessage() {}

func (x *Deck_Providers) ProtoReflect() protoreflect.Message {
	mi := &file_config_deck_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deck_Providers.ProtoReflect.Descriptor instead.
func (*Deck_Providers) Descriptor() ([]byte, []int) {
	return file_config_deck_proto_rawDescGZIP(), []int{0, 3}
}

func (x *Deck_Providers) GetAppengine() *Deck_Providers_Appengine {
	if x != nil {
		return x.Appengine
	}
	return nil
}

func (x *Deck_Providers) GetAws() *Deck_Providers_Aws {
	if x != nil {
		return x.Aws
	}
	return nil
}

func (x *Deck_Providers) GetAzure() *Deck_Providers_Azure {
	if x != nil {
		return x.Azure
	}
	return nil
}

func (x *Deck_Providers) GetCloudfoundry() *Deck_Providers_Cloudfoundry {
	if x != nil {
		return x.Cloudfoundry
	}
	return nil
}

func (x *Deck_Providers) GetDcos() *Deck_Providers_Dcos {
	if x != nil {
		return x.Dcos
	}
	return nil
}

func (x *Deck_Providers) GetEcs() *Deck_Providers_Ecs {
	if x != nil {
		return x.Ecs
	}
	return nil
}

func (x *Deck_Providers) GetGce() *Deck_Providers_Gce {
	if x != nil {
		return x.Gce
	}
	return nil
}

func (x *Deck_Providers) GetHuaweicloud() *Deck_Providers_HuaweiCloud {
	if x != nil {
		return x.Huaweicloud
	}
	return nil
}

func (x *Deck_Providers) GetTencentcloud() *Deck_Providers_TencentCloud {
	if x != nil {
		return x.Tencentcloud
	}
	return nil
}

func (x *Deck_Providers) GetKubernetes() *Deck_Providers_Kubernetes {
	if x != nil {
		return x.Kubernetes
	}
	return nil
}

type Deck_Providers_Appengine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Defaults *Deck_Providers_Appengine_Defaults `protobuf:"bytes,1,opt,name=defaults,proto3" json:"defaults,omitempty"`
}

func (x *Deck_Providers_Appengine) Reset() {
	*x = Deck_Providers_Appengine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_deck_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Deck_Providers_Appengine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deck_Providers_Appengine) ProtoMessage() {}

func (x *Deck_Providers_Appengine) ProtoReflect() protoreflect.Message {
	mi := &file_config_deck_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deck_Providers_Appengine.ProtoReflect.Descriptor instead.
func (*Deck_Providers_Appengine) Descriptor() ([]byte, []int) {
	return file_config_deck_proto_rawDescGZIP(), []int{0, 3, 0}
}

func (x *Deck_Providers_Appengine) GetDefaults() *Deck_Providers_Appengine_Defaults {
	if x != nil {
		return x.Defaults
	}
	return nil
}

type Deck_Providers_Aws struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Defaults *Deck_Providers_Aws_Defaults `protobuf:"bytes,1,opt,name=defaults,proto3" json:"defaults,omitempty"`
}

func (x *Deck_Providers_Aws) Reset() {
	*x = Deck_Providers_Aws{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_deck_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Deck_Providers_Aws) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deck_Providers_Aws) ProtoMessage() {}

func (x *Deck_Providers_Aws) ProtoReflect() protoreflect.Message {
	mi := &file_config_deck_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deck_Providers_Aws.ProtoReflect.Descriptor instead.
func (*Deck_Providers_Aws) Descriptor() ([]byte, []int) {
	return file_config_deck_proto_rawDescGZIP(), []int{0, 3, 1}
}

func (x *Deck_Providers_Aws) GetDefaults() *Deck_Providers_Aws_Defaults {
	if x != nil {
		return x.Defaults
	}
	return nil
}

type Deck_Providers_Azure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Defaults *Deck_Providers_Azure_Defaults `protobuf:"bytes,1,opt,name=defaults,proto3" json:"defaults,omitempty"`
}

func (x *Deck_Providers_Azure) Reset() {
	*x = Deck_Providers_Azure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_deck_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Deck_Providers_Azure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deck_Providers_Azure) ProtoMessage() {}

func (x *Deck_Providers_Azure) ProtoReflect() protoreflect.Message {
	mi := &file_config_deck_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deck_Providers_Azure.ProtoReflect.Descriptor instead.
func (*Deck_Providers_Azure) Descriptor() ([]byte, []int) {
	return file_config_deck_proto_rawDescGZIP(), []int{0, 3, 2}
}

func (x *Deck_Providers_Azure) GetDefaults() *Deck_Providers_Azure_Defaults {
	if x != nil {
		return x.Defaults
	}
	return nil
}

type Deck_Providers_Cloudfoundry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Defaults *Deck_Providers_Cloudfoundry_Defaults `protobuf:"bytes,1,opt,name=defaults,proto3" json:"defaults,omitempty"`
}

func (x *Deck_Providers_Cloudfoundry) Reset() {
	*x = Deck_Providers_Cloudfoundry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_deck_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Deck_Providers_Cloudfoundry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deck_Providers_Cloudfoundry) ProtoMessage() {}

func (x *Deck_Providers_Cloudfoundry) ProtoReflect() protoreflect.Message {
	mi := &file_config_deck_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deck_Providers_Cloudfoundry.ProtoReflect.Descriptor instead.
func (*Deck_Providers_Cloudfoundry) Descriptor() ([]byte, []int) {
	return file_config_deck_proto_rawDescGZIP(), []int{0, 3, 3}
}

func (x *Deck_Providers_Cloudfoundry) GetDefaults() *Deck_Providers_Cloudfoundry_Defaults {
	if x != nil {
		return x.Defaults
	}
	return nil
}

type Deck_Providers_Dcos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Defaults *Deck_Providers_Dcos_Defaults `protobuf:"bytes,1,opt,name=defaults,proto3" json:"defaults,omitempty"`
}

func (x *Deck_Providers_Dcos) Reset() {
	*x = Deck_Providers_Dcos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_deck_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Deck_Providers_Dcos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deck_Providers_Dcos) ProtoMessage() {}

func (x *Deck_Providers_Dcos) ProtoReflect() protoreflect.Message {
	mi := &file_config_deck_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deck_Providers_Dcos.ProtoReflect.Descriptor instead.
func (*Deck_Providers_Dcos) Descriptor() ([]byte, []int) {
	return file_config_deck_proto_rawDescGZIP(), []int{0, 3, 4}
}

func (x *Deck_Providers_Dcos) GetDefaults() *Deck_Providers_Dcos_Defaults {
	if x != nil {
		return x.Defaults
	}
	return nil
}

type Deck_Providers_Ecs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Defaults *Deck_Providers_Ecs_Defaults `protobuf:"bytes,1,opt,name=defaults,proto3" json:"defaults,omitempty"`
}

func (x *Deck_Providers_Ecs) Reset() {
	*x = Deck_Providers_Ecs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_deck_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Deck_Providers_Ecs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deck_Providers_Ecs) ProtoMessage() {}

func (x *Deck_Providers_Ecs) ProtoReflect() protoreflect.Message {
	mi := &file_config_deck_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deck_Providers_Ecs.ProtoReflect.Descriptor instead.
func (*Deck_Providers_Ecs) Descriptor() ([]byte, []int) {
	return file_config_deck_proto_rawDescGZIP(), []int{0, 3, 5}
}

func (x *Deck_Providers_Ecs) GetDefaults() *Deck_Providers_Ecs_Defaults {
	if x != nil {
		return x.Defaults
	}
	return nil
}

type Deck_Providers_Gce struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Defaults *Deck_Providers_Gce_Defaults `protobuf:"bytes,1,opt,name=defaults,proto3" json:"defaults,omitempty"`
}

func (x *Deck_Providers_Gce) Reset() {
	*x = Deck_Providers_Gce{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_deck_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Deck_Providers_Gce) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deck_Providers_Gce) ProtoMessage() {}

func (x *Deck_Providers_Gce) ProtoReflect() protoreflect.Message {
	mi := &file_config_deck_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deck_Providers_Gce.ProtoReflect.Descriptor instead.
func (*Deck_Providers_Gce) Descriptor() ([]byte, []int) {
	return file_config_deck_proto_rawDescGZIP(), []int{0, 3, 6}
}

func (x *Deck_Providers_Gce) GetDefaults() *Deck_Providers_Gce_Defaults {
	if x != nil {
		return x.Defaults
	}
	return nil
}

type Deck_Providers_HuaweiCloud struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Defaults *Deck_Providers_HuaweiCloud_Defaults `protobuf:"bytes,1,opt,name=defaults,proto3" json:"defaults,omitempty"`
}

func (x *Deck_Providers_HuaweiCloud) Reset() {
	*x = Deck_Providers_HuaweiCloud{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_deck_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Deck_Providers_HuaweiCloud) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deck_Providers_HuaweiCloud) ProtoMessage() {}

func (x *Deck_Providers_HuaweiCloud) ProtoReflect() protoreflect.Message {
	mi := &file_config_deck_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deck_Providers_HuaweiCloud.ProtoReflect.Descriptor instead.
func (*Deck_Providers_HuaweiCloud) Descriptor() ([]byte, []int) {
	return file_config_deck_proto_rawDescGZIP(), []int{0, 3, 7}
}

func (x *Deck_Providers_HuaweiCloud) GetDefaults() *Deck_Providers_HuaweiCloud_Defaults {
	if x != nil {
		return x.Defaults
	}
	return nil
}

// TODO: add TencentCloud as a cloud provider so we can write
// config to Deck and Clouddriver.
type Deck_Providers_TencentCloud struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Defaults *Deck_Providers_TencentCloud_Defaults `protobuf:"bytes,1,opt,name=defaults,proto3" json:"defaults,omitempty"`
}

func (x *Deck_Providers_TencentCloud) Reset() {
	*x = Deck_Providers_TencentCloud{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_deck_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Deck_Providers_TencentCloud) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deck_Providers_TencentCloud) ProtoMessage() {}

func (x *Deck_Providers_TencentCloud) ProtoReflect() protoreflect.Message {
	mi := &file_config_deck_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deck_Providers_TencentCloud.ProtoReflect.Descriptor instead.
func (*Deck_Providers_TencentCloud) Descriptor() ([]byte, []int) {
	return file_config_deck_proto_rawDescGZIP(), []int{0, 3, 8}
}

func (x *Deck_Providers_TencentCloud) GetDefaults() *Deck_Providers_TencentCloud_Defaults {
	if x != nil {
		return x.Defaults
	}
	return nil
}

// The Kubernetes provider has no statically-configured defaults,
// but Deck currently registers each cloud provider based on the existence
// of an entry in the `providers` block.
type Deck_Providers_Kubernetes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Deck_Providers_Kubernetes) Reset() {
	*x = Deck_Providers_Kubernetes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_deck_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Deck_Providers_Kubernetes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deck_Providers_Kubernetes) ProtoMessage() {}

func (x *Deck_Providers_Kubernetes) ProtoReflect() protoreflect.Message {
	mi := &file_config_deck_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deck_Providers_Kubernetes.ProtoReflect.Descriptor instead.
func (*Deck_Providers_Kubernetes) Descriptor() ([]byte, []int) {
	return file_config_deck_proto_rawDescGZIP(), []int{0, 3, 9}
}

type Deck_Providers_Appengine_Defaults struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
}

func (x *Deck_Providers_Appengine_Defaults) Reset() {
	*x = Deck_Providers_Appengine_Defaults{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_deck_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Deck_Providers_Appengine_Defaults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deck_Providers_Appengine_Defaults) ProtoMessage() {}

func (x *Deck_Providers_Appengine_Defaults) ProtoReflect() protoreflect.Message {
	mi := &file_config_deck_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deck_Providers_Appengine_Defaults.ProtoReflect.Descriptor instead.
func (*Deck_Providers_Appengine_Defaults) Descriptor() ([]byte, []int) {
	return file_config_deck_proto_rawDescGZIP(), []int{0, 3, 0, 0}
}

func (x *Deck_Providers_Appengine_Defaults) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

type Deck_Providers_Aws_Defaults struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Region  string `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
}

func (x *Deck_Providers_Aws_Defaults) Reset() {
	*x = Deck_Providers_Aws_Defaults{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_deck_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Deck_Providers_Aws_Defaults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deck_Providers_Aws_Defaults) ProtoMessage() {}

func (x *Deck_Providers_Aws_Defaults) ProtoReflect() protoreflect.Message {
	mi := &file_config_deck_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deck_Providers_Aws_Defaults.ProtoReflect.Descriptor instead.
func (*Deck_Providers_Aws_Defaults) Descriptor() ([]byte, []int) {
	return file_config_deck_proto_rawDescGZIP(), []int{0, 3, 1, 0}
}

func (x *Deck_Providers_Aws_Defaults) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *Deck_Providers_Aws_Defaults) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

type Deck_Providers_Azure_Defaults struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Region  string `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
}

func (x *Deck_Providers_Azure_Defaults) Reset() {
	*x = Deck_Providers_Azure_Defaults{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_deck_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Deck_Providers_Azure_Defaults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deck_Providers_Azure_Defaults) ProtoMessage() {}

func (x *Deck_Providers_Azure_Defaults) ProtoReflect() protoreflect.Message {
	mi := &file_config_deck_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deck_Providers_Azure_Defaults.ProtoReflect.Descriptor instead.
func (*Deck_Providers_Azure_Defaults) Descriptor() ([]byte, []int) {
	return file_config_deck_proto_rawDescGZIP(), []int{0, 3, 2, 0}
}

func (x *Deck_Providers_Azure_Defaults) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *Deck_Providers_Azure_Defaults) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

type Deck_Providers_Cloudfoundry_Defaults struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
}

func (x *Deck_Providers_Cloudfoundry_Defaults) Reset() {
	*x = Deck_Providers_Cloudfoundry_Defaults{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_deck_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Deck_Providers_Cloudfoundry_Defaults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deck_Providers_Cloudfoundry_Defaults) ProtoMessage() {}

func (x *Deck_Providers_Cloudfoundry_Defaults) ProtoReflect() protoreflect.Message {
	mi := &file_config_deck_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deck_Providers_Cloudfoundry_Defaults.ProtoReflect.Descriptor instead.
func (*Deck_Providers_Cloudfoundry_Defaults) Descriptor() ([]byte, []int) {
	return file_config_deck_proto_rawDescGZIP(), []int{0, 3, 3, 0}
}

func (x *Deck_Providers_Cloudfoundry_Defaults) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

type Deck_Providers_Dcos_Defaults struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
}

func (x *Deck_Providers_Dcos_Defaults) Reset() {
	*x = Deck_Providers_Dcos_Defaults{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_deck_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Deck_Providers_Dcos_Defaults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deck_Providers_Dcos_Defaults) ProtoMessage() {}

func (x *Deck_Providers_Dcos_Defaults) ProtoReflect() protoreflect.Message {
	mi := &file_config_deck_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deck_Providers_Dcos_Defaults.ProtoReflect.Descriptor instead.
func (*Deck_Providers_Dcos_Defaults) Descriptor() ([]byte, []int) {
	return file_config_deck_proto_rawDescGZIP(), []int{0, 3, 4, 0}
}

func (x *Deck_Providers_Dcos_Defaults) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

type Deck_Providers_Ecs_Defaults struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
}

func (x *Deck_Providers_Ecs_Defaults) Reset() {
	*x = Deck_Providers_Ecs_Defaults{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_deck_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Deck_Providers_Ecs_Defaults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deck_Providers_Ecs_Defaults) ProtoMessage() {}

func (x *Deck_Providers_Ecs_Defaults) ProtoReflect() protoreflect.Message {
	mi := &file_config_deck_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deck_Providers_Ecs_Defaults.ProtoReflect.Descriptor instead.
func (*Deck_Providers_Ecs_Defaults) Descriptor() ([]byte, []int) {
	return file_config_deck_proto_rawDescGZIP(), []int{0, 3, 5, 0}
}

func (x *Deck_Providers_Ecs_Defaults) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

type Deck_Providers_Gce_Defaults struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Region  string `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
}

func (x *Deck_Providers_Gce_Defaults) Reset() {
	*x = Deck_Providers_Gce_Defaults{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_deck_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Deck_Providers_Gce_Defaults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deck_Providers_Gce_Defaults) ProtoMessage() {}

func (x *Deck_Providers_Gce_Defaults) ProtoReflect() protoreflect.Message {
	mi := &file_config_deck_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deck_Providers_Gce_Defaults.ProtoReflect.Descriptor instead.
func (*Deck_Providers_Gce_Defaults) Descriptor() ([]byte, []int) {
	return file_config_deck_proto_rawDescGZIP(), []int{0, 3, 6, 0}
}

func (x *Deck_Providers_Gce_Defaults) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *Deck_Providers_Gce_Defaults) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

type Deck_Providers_HuaweiCloud_Defaults struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Region  string `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
}

func (x *Deck_Providers_HuaweiCloud_Defaults) Reset() {
	*x = Deck_Providers_HuaweiCloud_Defaults{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_deck_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Deck_Providers_HuaweiCloud_Defaults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deck_Providers_HuaweiCloud_Defaults) ProtoMessage() {}

func (x *Deck_Providers_HuaweiCloud_Defaults) ProtoReflect() protoreflect.Message {
	mi := &file_config_deck_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deck_Providers_HuaweiCloud_Defaults.ProtoReflect.Descriptor instead.
func (*Deck_Providers_HuaweiCloud_Defaults) Descriptor() ([]byte, []int) {
	return file_config_deck_proto_rawDescGZIP(), []int{0, 3, 7, 0}
}

func (x *Deck_Providers_HuaweiCloud_Defaults) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *Deck_Providers_HuaweiCloud_Defaults) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

type Deck_Providers_TencentCloud_Defaults struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Region  string `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
}

func (x *Deck_Providers_TencentCloud_Defaults) Reset() {
	*x = Deck_Providers_TencentCloud_Defaults{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_deck_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Deck_Providers_TencentCloud_Defaults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deck_Providers_TencentCloud_Defaults) ProtoMessage() {}

func (x *Deck_Providers_TencentCloud_Defaults) ProtoReflect() protoreflect.Message {
	mi := &file_config_deck_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deck_Providers_TencentCloud_Defaults.ProtoReflect.Descriptor instead.
func (*Deck_Providers_TencentCloud_Defaults) Descriptor() ([]byte, []int) {
	return file_config_deck_proto_rawDescGZIP(), []int{0, 3, 8, 0}
}

func (x *Deck_Providers_TencentCloud_Defaults) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *Deck_Providers_TencentCloud_Defaults) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

var File_config_deck_proto protoreflect.FileDescriptor

var file_config_deck_proto_rawDesc = []byte{
	0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x64, 0x65, 0x63, 0x6b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x62, 0x65, 0x61, 0x72, 0x79, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x18, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x5f, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x70, 0x75, 0x62, 0x73, 0x75, 0x62,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x73, 0x6c, 0x61, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x19, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x74,
	0x77, 0x69, 0x6c, 0x69, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb5, 0x1c, 0x0a, 0x04,
	0x44, 0x65, 0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x61, 0x74, 0x65, 0x55, 0x72, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x61, 0x74, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x3c,
	0x0a, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x0b, 0x61, 0x75, 0x74, 0x68, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x61, 0x75, 0x74, 0x68, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x61, 0x75, 0x74, 0x68, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x28, 0x0a, 0x0f, 0x62, 0x61, 0x6b, 0x65, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x62, 0x61, 0x6b, 0x65, 0x72,
	0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x55, 0x72, 0x6c, 0x12, 0x31, 0x0a, 0x06, 0x63, 0x61,
	0x6e, 0x61, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44, 0x65, 0x63, 0x6b, 0x2e, 0x43,
	0x61, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x06, 0x63, 0x61, 0x6e, 0x61, 0x72, 0x79, 0x12, 0x46, 0x0a,
	0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x44, 0x65, 0x63, 0x6b, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3a, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44, 0x65, 0x63, 0x6b, 0x2e, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x35, 0x0a, 0x07, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44, 0x65, 0x63, 0x6b, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x73, 0x52, 0x07, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x1a, 0xbe, 0x03, 0x0a,
	0x08, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x48, 0x0a, 0x11, 0x70, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x11, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6f, 0x73, 0x4d, 0x6f, 0x6e, 0x6b,
	0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6f, 0x73, 0x4d, 0x6f, 0x6e, 0x6b, 0x65,
	0x79, 0x12, 0x3c, 0x0a, 0x0b, 0x66, 0x69, 0x61, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x0b, 0x66, 0x69, 0x61, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x5e, 0x0a, 0x1c, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x56, 0x32, 0x55, 0x49, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x1c, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x56, 0x32, 0x55, 0x49, 0x12,
	0x44, 0x0a, 0x0f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x0f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x12, 0x46, 0x0a, 0x10, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x10, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x1a, 0x80, 0x03,
	0x0a, 0x06, 0x43, 0x61, 0x6e, 0x61, 0x72, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x12, 0x44, 0x0a, 0x0f,
	0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x0f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x12, 0x42, 0x0a, 0x0e, 0x73, 0x68, 0x6f, 0x77, 0x41, 0x6c, 0x6c, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42,
	0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0e, 0x73, 0x68, 0x6f, 0x77, 0x41, 0x6c,
	0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x46, 0x0a, 0x10, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x10,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x1a, 0x96, 0x03, 0x0a, 0x0d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x3b, 0x0a, 0x09, 0x62, 0x65, 0x61, 0x72, 0x79, 0x63, 0x68, 0x61, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x65, 0x61, 0x72, 0x79,
	0x43, 0x68, 0x61, 0x74, 0x52, 0x09, 0x62, 0x65, 0x61, 0x72, 0x79, 0x63, 0x68, 0x61, 0x74, 0x12,
	0x2f, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x44, 0x0a, 0x0c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3e, 0x0a, 0x0a, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x68, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x74, 0x52, 0x0a, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x68, 0x61, 0x74, 0x12, 0x32, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x73, 0x75, 0x62,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x75, 0x62, 0x53,
	0x75, 0x62, 0x52, 0x06, 0x70, 0x75, 0x62, 0x73, 0x75, 0x62, 0x12, 0x2f, 0x0a, 0x05, 0x73, 0x6c,
	0x61, 0x63, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53,
	0x6c, 0x61, 0x63, 0x6b, 0x52, 0x05, 0x73, 0x6c, 0x61, 0x63, 0x6b, 0x12, 0x2c, 0x0a, 0x03, 0x73,
	0x6d, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x77,
	0x69, 0x6c, 0x69, 0x6f, 0x52, 0x03, 0x73, 0x6d, 0x73, 0x1a, 0xf7, 0x0e, 0x0a, 0x09, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x12, 0x44, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44, 0x65, 0x63, 0x6b, 0x2e, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x52, 0x09, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x12, 0x32, 0x0a,
	0x03, 0x61, 0x77, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44, 0x65, 0x63, 0x6b, 0x2e, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x41, 0x77, 0x73, 0x52, 0x03, 0x61, 0x77,
	0x73, 0x12, 0x38, 0x0a, 0x05, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x44, 0x65, 0x63, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x41,
	0x7a, 0x75, 0x72, 0x65, 0x52, 0x05, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x12, 0x4d, 0x0a, 0x0c, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x44, 0x65, 0x63, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x72, 0x79, 0x52, 0x0c, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x72, 0x79, 0x12, 0x35, 0x0a, 0x04, 0x64, 0x63,
	0x6f, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44, 0x65, 0x63, 0x6b, 0x2e, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x44, 0x63, 0x6f, 0x73, 0x52, 0x04, 0x64, 0x63, 0x6f,
	0x73, 0x12, 0x32, 0x0a, 0x03, 0x65, 0x63, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44, 0x65,
	0x63, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x45, 0x63, 0x73,
	0x52, 0x03, 0x65, 0x63, 0x73, 0x12, 0x32, 0x0a, 0x03, 0x67, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x44, 0x65, 0x63, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73,
	0x2e, 0x47, 0x63, 0x65, 0x52, 0x03, 0x67, 0x63, 0x65, 0x12, 0x4a, 0x0a, 0x0b, 0x68, 0x75, 0x61,
	0x77, 0x65, 0x69, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44, 0x65,
	0x63, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x48, 0x75, 0x61,
	0x77, 0x65, 0x69, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x52, 0x0b, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x12, 0x4d, 0x0a, 0x0c, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x6e, 0x74,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44, 0x65, 0x63, 0x6b, 0x2e,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x54, 0x65, 0x6e, 0x63, 0x65, 0x6e,
	0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x52, 0x0c, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x6e, 0x74, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x12, 0x47, 0x0a, 0x0a, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74,
	0x65, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44, 0x65, 0x63, 0x6b, 0x2e, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65,
	0x73, 0x52, 0x0a, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x1a, 0x7e, 0x0a,
	0x09, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x12, 0x4b, 0x0a, 0x08, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44, 0x65, 0x63, 0x6b,
	0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x52, 0x08, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x1a, 0x24, 0x0a, 0x08, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x8a, 0x01,
	0x0a, 0x03, 0x41, 0x77, 0x73, 0x12, 0x45, 0x0a, 0x08, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44, 0x65, 0x63, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x41, 0x77, 0x73, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x73, 0x52, 0x08, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x1a, 0x3c, 0x0a, 0x08,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x1a, 0x8e, 0x01, 0x0a, 0x05, 0x41,
	0x7a, 0x75, 0x72, 0x65, 0x12, 0x47, 0x0a, 0x08, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44, 0x65, 0x63, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x2e, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x73, 0x52, 0x08, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x1a, 0x3c, 0x0a,
	0x08, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x1a, 0x84, 0x01, 0x0a, 0x0c,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x72, 0x79, 0x12, 0x4e, 0x0a, 0x08,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44, 0x65,
	0x63, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x72, 0x79, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x73, 0x52, 0x08, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x1a, 0x24, 0x0a, 0x08,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x1a, 0x74, 0x0a, 0x04, 0x44, 0x63, 0x6f, 0x73, 0x12, 0x46, 0x0a, 0x08, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44, 0x65, 0x63, 0x6b,
	0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x44, 0x63, 0x6f, 0x73, 0x2e,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x52, 0x08, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x73, 0x1a, 0x24, 0x0a, 0x08, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x72, 0x0a, 0x03, 0x45, 0x63, 0x73, 0x12,
	0x45, 0x0a, 0x08, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x44, 0x65, 0x63, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e,
	0x45, 0x63, 0x73, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x52, 0x08, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x1a, 0x24, 0x0a, 0x08, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x8a, 0x01, 0x0a,
	0x03, 0x47, 0x63, 0x65, 0x12, 0x45, 0x0a, 0x08, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44, 0x65, 0x63, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x2e, 0x47, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x73, 0x52, 0x08, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x1a, 0x3c, 0x0a, 0x08, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x1a, 0x9a, 0x01, 0x0a, 0x0b, 0x48, 0x75,
	0x61, 0x77, 0x65, 0x69, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x12, 0x4d, 0x0a, 0x08, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44, 0x65, 0x63, 0x6b, 0x2e,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x48, 0x75, 0x61, 0x77, 0x65, 0x69,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x52, 0x08,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x1a, 0x3c, 0x0a, 0x08, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x1a, 0x9c, 0x01, 0x0a, 0x0c, 0x54, 0x65, 0x6e, 0x63, 0x65,
	0x6e, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x12, 0x4e, 0x0a, 0x08, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44, 0x65, 0x63, 0x6b, 0x2e, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x54, 0x65, 0x6e, 0x63, 0x65, 0x6e, 0x74, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x52, 0x08, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x1a, 0x3c, 0x0a, 0x08, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x1a, 0x0c, 0x0a, 0x0a, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65,
	0x74, 0x65, 0x73, 0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x73, 0x70, 0x69, 0x6e, 0x6e, 0x61, 0x6b, 0x65, 0x72, 0x2f, 0x6b, 0x6c, 0x65, 0x61,
	0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_config_deck_proto_rawDescOnce sync.Once
	file_config_deck_proto_rawDescData = file_config_deck_proto_rawDesc
)

func file_config_deck_proto_rawDescGZIP() []byte {
	file_config_deck_proto_rawDescOnce.Do(func() {
		file_config_deck_proto_rawDescData = protoimpl.X.CompressGZIP(file_config_deck_proto_rawDescData)
	})
	return file_config_deck_proto_rawDescData
}

var file_config_deck_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_config_deck_proto_goTypes = []interface{}{
	(*Deck)(nil),                                 // 0: proto.config.Deck
	(*Deck_Features)(nil),                        // 1: proto.config.Deck.Features
	(*Deck_Canary)(nil),                          // 2: proto.config.Deck.Canary
	(*Deck_Notifications)(nil),                   // 3: proto.config.Deck.Notifications
	(*Deck_Providers)(nil),                       // 4: proto.config.Deck.Providers
	(*Deck_Providers_Appengine)(nil),             // 5: proto.config.Deck.Providers.Appengine
	(*Deck_Providers_Aws)(nil),                   // 6: proto.config.Deck.Providers.Aws
	(*Deck_Providers_Azure)(nil),                 // 7: proto.config.Deck.Providers.Azure
	(*Deck_Providers_Cloudfoundry)(nil),          // 8: proto.config.Deck.Providers.Cloudfoundry
	(*Deck_Providers_Dcos)(nil),                  // 9: proto.config.Deck.Providers.Dcos
	(*Deck_Providers_Ecs)(nil),                   // 10: proto.config.Deck.Providers.Ecs
	(*Deck_Providers_Gce)(nil),                   // 11: proto.config.Deck.Providers.Gce
	(*Deck_Providers_HuaweiCloud)(nil),           // 12: proto.config.Deck.Providers.HuaweiCloud
	(*Deck_Providers_TencentCloud)(nil),          // 13: proto.config.Deck.Providers.TencentCloud
	(*Deck_Providers_Kubernetes)(nil),            // 14: proto.config.Deck.Providers.Kubernetes
	(*Deck_Providers_Appengine_Defaults)(nil),    // 15: proto.config.Deck.Providers.Appengine.Defaults
	(*Deck_Providers_Aws_Defaults)(nil),          // 16: proto.config.Deck.Providers.Aws.Defaults
	(*Deck_Providers_Azure_Defaults)(nil),        // 17: proto.config.Deck.Providers.Azure.Defaults
	(*Deck_Providers_Cloudfoundry_Defaults)(nil), // 18: proto.config.Deck.Providers.Cloudfoundry.Defaults
	(*Deck_Providers_Dcos_Defaults)(nil),         // 19: proto.config.Deck.Providers.Dcos.Defaults
	(*Deck_Providers_Ecs_Defaults)(nil),          // 20: proto.config.Deck.Providers.Ecs.Defaults
	(*Deck_Providers_Gce_Defaults)(nil),          // 21: proto.config.Deck.Providers.Gce.Defaults
	(*Deck_Providers_HuaweiCloud_Defaults)(nil),  // 22: proto.config.Deck.Providers.HuaweiCloud.Defaults
	(*Deck_Providers_TencentCloud_Defaults)(nil), // 23: proto.config.Deck.Providers.TencentCloud.Defaults
	(*wrappers.BoolValue)(nil),                   // 24: google.protobuf.BoolValue
	(*notification.BearyChat)(nil),               // 25: proto.notification.BearyChat
	(*notification.Email)(nil),                   // 26: proto.notification.Email
	(*notification.GithubStatus)(nil),            // 27: proto.notification.GithubStatus
	(*notification.GoogleChat)(nil),              // 28: proto.notification.GoogleChat
	(*notification.PubSub)(nil),                  // 29: proto.notification.PubSub
	(*notification.Slack)(nil),                   // 30: proto.notification.Slack
	(*notification.Twilio)(nil),                  // 31: proto.notification.Twilio
}
var file_config_deck_proto_depIdxs = []int32{
	24, // 0: proto.config.Deck.authEnabled:type_name -> google.protobuf.BoolValue
	2,  // 1: proto.config.Deck.canary:type_name -> proto.config.Deck.Canary
	3,  // 2: proto.config.Deck.notifications:type_name -> proto.config.Deck.Notifications
	4,  // 3: proto.config.Deck.providers:type_name -> proto.config.Deck.Providers
	1,  // 4: proto.config.Deck.feature:type_name -> proto.config.Deck.Features
	24, // 5: proto.config.Deck.Features.pipelineTemplates:type_name -> google.protobuf.BoolValue
	24, // 6: proto.config.Deck.Features.chaosMonkey:type_name -> google.protobuf.BoolValue
	24, // 7: proto.config.Deck.Features.fiatEnabled:type_name -> google.protobuf.BoolValue
	24, // 8: proto.config.Deck.Features.managedPipelineTemplatesV2UI:type_name -> google.protobuf.BoolValue
	24, // 9: proto.config.Deck.Features.managedDelivery:type_name -> google.protobuf.BoolValue
	24, // 10: proto.config.Deck.Features.managedResources:type_name -> google.protobuf.BoolValue
	24, // 11: proto.config.Deck.Canary.featureDisabled:type_name -> google.protobuf.BoolValue
	24, // 12: proto.config.Deck.Canary.showAllConfigs:type_name -> google.protobuf.BoolValue
	24, // 13: proto.config.Deck.Canary.templatesEnabled:type_name -> google.protobuf.BoolValue
	25, // 14: proto.config.Deck.Notifications.bearychat:type_name -> proto.notification.BearyChat
	26, // 15: proto.config.Deck.Notifications.email:type_name -> proto.notification.Email
	27, // 16: proto.config.Deck.Notifications.githubStatus:type_name -> proto.notification.GithubStatus
	28, // 17: proto.config.Deck.Notifications.googleChat:type_name -> proto.notification.GoogleChat
	29, // 18: proto.config.Deck.Notifications.pubsub:type_name -> proto.notification.PubSub
	30, // 19: proto.config.Deck.Notifications.slack:type_name -> proto.notification.Slack
	31, // 20: proto.config.Deck.Notifications.sms:type_name -> proto.notification.Twilio
	5,  // 21: proto.config.Deck.Providers.appengine:type_name -> proto.config.Deck.Providers.Appengine
	6,  // 22: proto.config.Deck.Providers.aws:type_name -> proto.config.Deck.Providers.Aws
	7,  // 23: proto.config.Deck.Providers.azure:type_name -> proto.config.Deck.Providers.Azure
	8,  // 24: proto.config.Deck.Providers.cloudfoundry:type_name -> proto.config.Deck.Providers.Cloudfoundry
	9,  // 25: proto.config.Deck.Providers.dcos:type_name -> proto.config.Deck.Providers.Dcos
	10, // 26: proto.config.Deck.Providers.ecs:type_name -> proto.config.Deck.Providers.Ecs
	11, // 27: proto.config.Deck.Providers.gce:type_name -> proto.config.Deck.Providers.Gce
	12, // 28: proto.config.Deck.Providers.huaweicloud:type_name -> proto.config.Deck.Providers.HuaweiCloud
	13, // 29: proto.config.Deck.Providers.tencentcloud:type_name -> proto.config.Deck.Providers.TencentCloud
	14, // 30: proto.config.Deck.Providers.kubernetes:type_name -> proto.config.Deck.Providers.Kubernetes
	15, // 31: proto.config.Deck.Providers.Appengine.defaults:type_name -> proto.config.Deck.Providers.Appengine.Defaults
	16, // 32: proto.config.Deck.Providers.Aws.defaults:type_name -> proto.config.Deck.Providers.Aws.Defaults
	17, // 33: proto.config.Deck.Providers.Azure.defaults:type_name -> proto.config.Deck.Providers.Azure.Defaults
	18, // 34: proto.config.Deck.Providers.Cloudfoundry.defaults:type_name -> proto.config.Deck.Providers.Cloudfoundry.Defaults
	19, // 35: proto.config.Deck.Providers.Dcos.defaults:type_name -> proto.config.Deck.Providers.Dcos.Defaults
	20, // 36: proto.config.Deck.Providers.Ecs.defaults:type_name -> proto.config.Deck.Providers.Ecs.Defaults
	21, // 37: proto.config.Deck.Providers.Gce.defaults:type_name -> proto.config.Deck.Providers.Gce.Defaults
	22, // 38: proto.config.Deck.Providers.HuaweiCloud.defaults:type_name -> proto.config.Deck.Providers.HuaweiCloud.Defaults
	23, // 39: proto.config.Deck.Providers.TencentCloud.defaults:type_name -> proto.config.Deck.Providers.TencentCloud.Defaults
	40, // [40:40] is the sub-list for method output_type
	40, // [40:40] is the sub-list for method input_type
	40, // [40:40] is the sub-list for extension type_name
	40, // [40:40] is the sub-list for extension extendee
	0,  // [0:40] is the sub-list for field type_name
}

func init() { file_config_deck_proto_init() }
func file_config_deck_proto_init() {
	if File_config_deck_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_config_deck_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Deck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_deck_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Deck_Features); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_deck_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Deck_Canary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_deck_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Deck_Notifications); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_deck_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Deck_Providers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_deck_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Deck_Providers_Appengine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_deck_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Deck_Providers_Aws); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_deck_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Deck_Providers_Azure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_deck_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Deck_Providers_Cloudfoundry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_deck_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Deck_Providers_Dcos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_deck_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Deck_Providers_Ecs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_deck_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Deck_Providers_Gce); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_deck_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Deck_Providers_HuaweiCloud); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_deck_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Deck_Providers_TencentCloud); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_deck_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Deck_Providers_Kubernetes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_deck_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Deck_Providers_Appengine_Defaults); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_deck_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Deck_Providers_Aws_Defaults); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_deck_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Deck_Providers_Azure_Defaults); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_deck_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Deck_Providers_Cloudfoundry_Defaults); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_deck_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Deck_Providers_Dcos_Defaults); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_deck_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Deck_Providers_Ecs_Defaults); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_deck_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Deck_Providers_Gce_Defaults); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_deck_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Deck_Providers_HuaweiCloud_Defaults); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_deck_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Deck_Providers_TencentCloud_Defaults); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_config_deck_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_config_deck_proto_goTypes,
		DependencyIndexes: file_config_deck_proto_depIdxs,
		MessageInfos:      file_config_deck_proto_msgTypes,
	}.Build()
	File_config_deck_proto = out.File
	file_config_deck_proto_rawDesc = nil
	file_config_deck_proto_goTypes = nil
	file_config_deck_proto_depIdxs = nil
}
